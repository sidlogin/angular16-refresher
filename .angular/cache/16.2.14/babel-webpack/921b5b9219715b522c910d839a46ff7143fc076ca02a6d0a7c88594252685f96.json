{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n  }\n  getPosts() {\n    return this.http.get(this.apiUrl);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","getPosts","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\workspace\\2024\\angular\\angular16-refresher\\src\\app\\http-api\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Post } from '../interfaces/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  apiUrl = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(private http: HttpClient) { }\n\n  getPosts(): Observable<Post[]> {\n    return this.http.get<Post[]>(this.apiUrl);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,4CAA4C;EAEb;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAAC,QAAAG,CAAA,G;qBAPUN,UAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVX,UAAU;IAAAY,OAAA,EAAVZ,UAAU,CAAAa,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}