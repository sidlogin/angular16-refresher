{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject, distinctUntilChanged, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/notes.service\";\nexport class NoteFormComponent {\n  constructor(fb, noteService) {\n    this.fb = fb;\n    this.noteService = noteService;\n    this.$destroy = new Subject();\n    this.noteService.getEditable().pipe(distinctUntilChanged(), takeUntil(this.$destroy)).subscribe(isEdit => {\n      this.isEdit = isEdit;\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes['selectedNote']?.currentValue) {\n      const receivedNote = changes['selectedNote']?.currentValue;\n      this.noteForm.patchValue({\n        ...this.noteForm.value,\n        ...receivedNote\n      });\n    }\n  }\n  ngOnInit() {\n    this.noteForm = this.fb.group({\n      id: new Date().getTime(),\n      title: ['', [Validators.required, Validators.minLength(4)]],\n      content: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.noteForm.invalid) {\n      return;\n    }\n    const note = this.noteForm.value;\n    if (this.isEdit) {\n      this.noteService.updateNote(note);\n      this.noteService.setEditable(false);\n    } else {\n      this.noteService.createNote(note);\n    }\n    this.noteForm.reset();\n  }\n  ngOnDestroy() {\n    this.$destroy.next();\n    this.$destroy.complete();\n  }\n  static #_ = this.ɵfac = function NoteFormComponent_Factory(t) {\n    return new (t || NoteFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NotesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NoteFormComponent,\n    selectors: [[\"app-note-form\"]],\n    inputs: {\n      selectedNote: \"selectedNote\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"note-form\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Title\", \"formControlName\", \"title\"], [\"for\", \"content\"], [\"type\", \"text\", \"name\", \"content\", \"placeholder\", \"Add content..\", \"formControlName\", \"content\"], [\"type\", \"submit\"]],\n    template: function NoteFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Add New Note\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function NoteFormComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(4, \"label\", 2)(5, \"input\", 3)(6, \"label\", 4)(7, \"input\", 5);\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.noteForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.isEdit ? \"Edit Note\" : \"Add Note\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".note-form[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  width: 300px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  margin-top: 6px;\\n  margin-bottom: 16px;\\n  resize: vertical;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #333;\\n  color: white;\\n  padding: 12px 20px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3J1ZC1hcHAvY29tcG9uZW50cy9ub3RlLWZvcm0vbm90ZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFDSjs7QUFFQTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdGUtZm9ybSB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSwgdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXJnaW4tdG9wOiA2cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDIwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","Subject","distinctUntilChanged","takeUntil","NoteFormComponent","constructor","fb","noteService","$destroy","getEditable","pipe","subscribe","isEdit","ngOnChanges","changes","currentValue","receivedNote","noteForm","patchValue","value","ngOnInit","group","id","Date","getTime","title","required","minLength","content","onSubmit","invalid","note","updateNote","setEditable","createNote","reset","ngOnDestroy","next","complete","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","NotesService","_2","selectors","inputs","selectedNote","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NoteFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NoteFormComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["C:\\workspace\\2024\\angular\\angular16-refresher\\src\\app\\crud-app\\components\\note-form\\note-form.component.ts","C:\\workspace\\2024\\angular\\angular16-refresher\\src\\app\\crud-app\\components\\note-form\\note-form.component.html"],"sourcesContent":["import { Component, Input, Output, OnChanges, OnInit, SimpleChange, SimpleChanges, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Note } from '../../interfaces/note';\nimport { NotesService } from '../../services/notes.service';\nimport { Subject, distinctUntilChanged, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-note-form',\n  templateUrl: './note-form.component.html',\n  styleUrls: ['./note-form.component.scss']\n})\nexport class NoteFormComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() selectedNote!: Note;\n\n  noteForm!: FormGroup;\n  isEdit!: boolean;\n  private readonly $destroy = new Subject<void>();\n  \n  constructor(\n    private fb: FormBuilder,\n    private noteService: NotesService\n  ) {\n    this.noteService.getEditable()\n    .pipe(\n      distinctUntilChanged(),\n      takeUntil(this.$destroy)\n    )\n    .subscribe((isEdit: boolean) => {\n      this.isEdit = isEdit;\n    });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes['selectedNote']?.currentValue) {\n      const receivedNote = changes['selectedNote']?.currentValue as Note;\n      this.noteForm.patchValue({\n        ...this.noteForm.value,\n        ...receivedNote\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.noteForm = this.fb.group({\n      id: new Date().getTime(),\n      title: ['', [Validators.required, Validators.minLength(4)]],\n      content: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.noteForm.invalid) {\n      return;\n    }\n    const note: Note = this.noteForm.value;\n    if (this.isEdit) {\n      this.noteService.updateNote(note);\n      this.noteService.setEditable(false);\n    } else {\n      this.noteService.createNote(note);\n    }\n\n    this.noteForm.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.$destroy.next();\n    this.$destroy.complete();\n  }\n}\n","<div class=\"note-form\">\n    <h2>Add New Note</h2>\n\n    <form [formGroup]=\"noteForm\" (ngSubmit)=\"onSubmit()\">\n        <label for=\"title\"></label>\n        <input type=\"text\" name=\"title\" placeholder=\"Title\" formControlName=\"title\" />\n\n        <label for=\"content\"></label>\n        <input type=\"text\" name=\"content\" placeholder=\"Add content..\" formControlName=\"content\" />\n\n        <button type=\"submit\">{{isEdit ? 'Edit Note': 'Add Note'}}</button>\n    </form>\n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,OAAO,EAAEC,oBAAoB,EAAEC,SAAS,QAAQ,MAAM;;;;AAO/D,OAAM,MAAOC,iBAAiB;EAO5BC,YACUC,EAAe,EACfC,WAAyB;IADzB,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IAJJ,KAAAC,QAAQ,GAAG,IAAIP,OAAO,EAAQ;IAM7C,IAAI,CAACM,WAAW,CAACE,WAAW,EAAE,CAC7BC,IAAI,CACHR,oBAAoB,EAAE,EACtBC,SAAS,CAAC,IAAI,CAACK,QAAQ,CAAC,CACzB,CACAG,SAAS,CAAEC,MAAe,IAAI;MAC7B,IAAI,CAACA,MAAM,GAAGA,MAAM;IACtB,CAAC,CAAC;EACJ;EACAC,WAAWA,CAACC,OAAsB;IAChC,IAAGA,OAAO,CAAC,cAAc,CAAC,EAAEC,YAAY,EAAE;MACxC,MAAMC,YAAY,GAAGF,OAAO,CAAC,cAAc,CAAC,EAAEC,YAAoB;MAClE,IAAI,CAACE,QAAQ,CAACC,UAAU,CAAC;QACvB,GAAG,IAAI,CAACD,QAAQ,CAACE,KAAK;QACtB,GAAGH;OACJ,CAAC;;EAEN;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACX,EAAE,CAACe,KAAK,CAAC;MAC5BC,EAAE,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MACxBC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACzB,UAAU,CAAC0B,QAAQ,EAAE1B,UAAU,CAAC2B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3DC,OAAO,EAAE,CAAC,EAAE,EAAE5B,UAAU,CAAC0B,QAAQ;KAClC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,IAAI,IAAI,CAACZ,QAAQ,CAACa,OAAO,EAAE;MACzB;;IAEF,MAAMC,IAAI,GAAS,IAAI,CAACd,QAAQ,CAACE,KAAK;IACtC,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACL,WAAW,CAACyB,UAAU,CAACD,IAAI,CAAC;MACjC,IAAI,CAACxB,WAAW,CAAC0B,WAAW,CAAC,KAAK,CAAC;KACpC,MAAM;MACL,IAAI,CAAC1B,WAAW,CAAC2B,UAAU,CAACH,IAAI,CAAC;;IAGnC,IAAI,CAACd,QAAQ,CAACkB,KAAK,EAAE;EACvB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAC5B,QAAQ,CAAC6B,IAAI,EAAE;IACpB,IAAI,CAAC7B,QAAQ,CAAC8B,QAAQ,EAAE;EAC1B;EAAC,QAAAC,CAAA,G;qBAxDUnC,iBAAiB,EAAAoC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjB1C,iBAAiB;IAAA2C,SAAA;IAAAC,MAAA;MAAAC,YAAA;IAAA;IAAAC,QAAA,GAAAV,EAAA,CAAAW,oBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX9BjB,EAAA,CAAAmB,cAAA,aAAuB;QACfnB,EAAA,CAAAoB,MAAA,mBAAY;QAAApB,EAAA,CAAAqB,YAAA,EAAK;QAErBrB,EAAA,CAAAmB,cAAA,cAAqD;QAAxBnB,EAAA,CAAAsB,UAAA,sBAAAC,oDAAA;UAAA,OAAYL,GAAA,CAAA7B,QAAA,EAAU;QAAA,EAAC;QAChDW,EAAA,CAAAwB,SAAA,eAA2B;QAM3BxB,EAAA,CAAAmB,cAAA,gBAAsB;QAAAnB,EAAA,CAAAoB,MAAA,GAAoC;QAAApB,EAAA,CAAAqB,YAAA,EAAS;;;QAPjErB,EAAA,CAAAyB,SAAA,GAAsB;QAAtBzB,EAAA,CAAA0B,UAAA,cAAAR,GAAA,CAAAzC,QAAA,CAAsB;QAOFuB,EAAA,CAAAyB,SAAA,GAAoC;QAApCzB,EAAA,CAAA2B,iBAAA,CAAAT,GAAA,CAAA9C,MAAA,4BAAoC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}