{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/shared-data.service\";\nimport * as i2 from \"@angular/common\";\nfunction SecondReceiverComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Subject: \", ctx_r0.subjectData, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Behavior Subject: \", ctx_r0.behaviorSubjectData, \"\");\n  }\n}\nexport class SecondReceiverComponent {\n  constructor(sharedDataService) {\n    this.sharedDataService = sharedDataService;\n    this.isSubscribed = false;\n  }\n  ngOnInit() {}\n  getSubscribedData() {\n    this.sharedDataService.getSubjectData().subscribe(data => this.subjectData = data);\n    this.sharedDataService.getBehaviorSubjectData().subscribe(data => this.behaviorSubjectData = data);\n    this.isSubscribed = true;\n  }\n  static #_ = this.ɵfac = function SecondReceiverComponent_Factory(t) {\n    return new (t || SecondReceiverComponent)(i0.ɵɵdirectiveInject(i1.SharedDataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SecondReceiverComponent,\n    selectors: [[\"app-second-receiver\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[3, \"click\"], [4, \"ngIf\"]],\n    template: function SecondReceiverComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function SecondReceiverComponent_Template_button_click_1_listener() {\n          return ctx.getSubscribedData();\n        });\n        i0.ɵɵtext(2, \"Send Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, SecondReceiverComponent_div_3_Template, 5, 2, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubscribed);\n      }\n    },\n    dependencies: [i2.NgIf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","subjectData","behaviorSubjectData","SecondReceiverComponent","constructor","sharedDataService","isSubscribed","ngOnInit","getSubscribedData","getSubjectData","subscribe","data","getBehaviorSubjectData","_","ɵɵdirectiveInject","i1","SharedDataService","_2","selectors","decls","vars","consts","template","SecondReceiverComponent_Template","rf","ctx","ɵɵlistener","SecondReceiverComponent_Template_button_click_1_listener","ɵɵtemplate","SecondReceiverComponent_div_3_Template","ɵɵproperty"],"sources":["C:\\workspace\\2024\\angular\\angular16-refresher\\src\\app\\state-management\\components\\second-receiver\\second-receiver.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedDataService } from '../../services/shared-data.service';\n\n@Component({\n  selector: 'app-second-receiver',\n  template: `\n    <div>\n      <button (click)=\"getSubscribedData()\">Send Data</button>\n      <div *ngIf=\"isSubscribed\">\n        <h2>Subject: {{subjectData}}</h2>\n        <h2>Behavior Subject: {{behaviorSubjectData}}</h2>\n    </div>\n    </div>\n  `\n})\nexport class SecondReceiverComponent implements OnInit {\n  isSubscribed = false;\n  subjectData!: string;\n  behaviorSubjectData!: string;\n\n  constructor(private sharedDataService: SharedDataService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  getSubscribedData(): void {\n    this.sharedDataService.getSubjectData().subscribe((data: string) => this.subjectData = data);\n    this.sharedDataService.getBehaviorSubjectData().subscribe((data: string) => this.behaviorSubjectData = data);\n    this.isSubscribed = true;\n  }\n  \n}\n"],"mappings":";;;;;IAQMA,EAAA,CAAAC,cAAA,UAA0B;IACpBD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAyC;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAD9CH,EAAA,CAAAI,SAAA,GAAwB;IAAxBJ,EAAA,CAAAK,kBAAA,cAAAC,MAAA,CAAAC,WAAA,KAAwB;IACxBP,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAK,kBAAA,uBAAAC,MAAA,CAAAE,mBAAA,KAAyC;;;AAKrD,OAAM,MAAOC,uBAAuB;EAKlCC,YAAoBC,iBAAoC;IAApC,KAAAA,iBAAiB,GAAjBA,iBAAiB;IAJrC,KAAAC,YAAY,GAAG,KAAK;EAIwC;EAE5DC,QAAQA,CAAA,GAER;EAEAC,iBAAiBA,CAAA;IACf,IAAI,CAACH,iBAAiB,CAACI,cAAc,EAAE,CAACC,SAAS,CAAEC,IAAY,IAAK,IAAI,CAACV,WAAW,GAAGU,IAAI,CAAC;IAC5F,IAAI,CAACN,iBAAiB,CAACO,sBAAsB,EAAE,CAACF,SAAS,CAAEC,IAAY,IAAK,IAAI,CAACT,mBAAmB,GAAGS,IAAI,CAAC;IAC5G,IAAI,CAACL,YAAY,GAAG,IAAI;EAC1B;EAAC,QAAAO,CAAA,G;qBAfUV,uBAAuB,EAAAT,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBd,uBAAuB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAThC9B,EAAA,CAAAC,cAAA,UAAK;QACKD,EAAA,CAAAgC,UAAA,mBAAAC,yDAAA;UAAA,OAASF,GAAA,CAAAjB,iBAAA,EAAmB;QAAA,EAAC;QAACd,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxDH,EAAA,CAAAkC,UAAA,IAAAC,sCAAA,iBAGI;QACNnC,EAAA,CAAAG,YAAA,EAAM;;;QAJEH,EAAA,CAAAI,SAAA,GAAkB;QAAlBJ,EAAA,CAAAoC,UAAA,SAAAL,GAAA,CAAAnB,YAAA,CAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}