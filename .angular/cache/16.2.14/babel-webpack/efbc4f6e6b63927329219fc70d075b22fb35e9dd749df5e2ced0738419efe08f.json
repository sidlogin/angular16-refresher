{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/card\";\nexport class TemplateFormComponent {\n  constructor() {\n    this.signUpForm = {\n      username: '',\n      email: ''\n    };\n  }\n  submitForm(form) {\n    if (form.valid) {\n      console.log(this.signUpForm, this.signUpForm);\n    }\n  }\n  static #_ = this.ɵfac = function TemplateFormComponent_Factory(t) {\n    return new (t || TemplateFormComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateFormComponent,\n    selectors: [[\"app-template-form\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"container\"], [\"appearance\", \"outlined\"], [3, \"ngSubmit\"], [\"signupForm\", \"ngForm\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Emter the username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"Emter your email\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Submit\"]],\n    template: function TemplateFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Template Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card\", 1)(4, \"mat-card-content\")(5, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function TemplateFormComponent_Template_form_ngSubmit_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.submitForm(_r0));\n        });\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelement(8, \"label\", 4);\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function TemplateFormComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.signUpForm.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelement(11, \"label\", 6);\n        i0.ɵɵelementStart(12, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function TemplateFormComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.signUpForm.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.signUpForm.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.signUpForm.email);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm, i2.MatCard, i2.MatCardContent],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n  width: 800px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVtcGxhdGUtZm9ybS90ZW1wbGF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["TemplateFormComponent","constructor","signUpForm","username","email","submitForm","form","valid","console","log","_","_2","selectors","decls","vars","consts","template","TemplateFormComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TemplateFormComponent_Template_form_ngSubmit_5_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","TemplateFormComponent_Template_input_ngModelChange_9_listener","$event","TemplateFormComponent_Template_input_ngModelChange_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\workspace\\2024\\angular\\angular16-refresher\\src\\app\\template-form\\template-form.component.ts","C:\\workspace\\2024\\angular\\angular16-refresher\\src\\app\\template-form\\template-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-template-form',\n  templateUrl: './template-form.component.html',\n  styleUrls: ['./template-form.component.scss']\n})\nexport class TemplateFormComponent {\n  signUpForm: { username: string; email: string } = {\n    username: '',\n    email: ''\n  }\n\n  constructor() { }\n\n  submitForm(form: NgForm): void {\n    if (form.valid) {\n      console.log(this.signUpForm, this.signUpForm\n    }\n  }\n}\n","<div class=\"container\">\n    <h2>Template Form</h2>\n    <mat-card appearance=\"outlined\">\n        <mat-card-content>\n                <form #signupForm=\"ngForm\" (ngSubmit)=\"submitForm(signupForm)\">\n                <div>\n                    <label for=\"username\"></label>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        placeholder=\"Emter the username\"\n                        [(ngModel)]=\"signUpForm.username\"\n                    />\n                </div>\n                <div>\n                    <label for=\"email\"></label>\n                    <input\n                        type=\"text\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"Emter your email\"\n                        [(ngModel)]=\"signUpForm.email\"\n                    />\n                </div>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n            </mat-card-content>\n        </mat-card>\n</div>"],"mappings":";;;AAQA,OAAM,MAAOA,qBAAqB;EAMhCC,YAAA;IALA,KAAAC,UAAU,GAAwC;MAChDC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;KACR;EAEe;EAEhBC,UAAUA,CAACC,IAAY;IACrB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE,IAAI,CAACA,UAAU;;EAEhD;EAAC,QAAAQ,CAAA,G;qBAZUV,qBAAqB;EAAA;EAAA,QAAAW,EAAA,G;UAArBX,qBAAqB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCRlCE,EAAA,CAAAC,cAAA,aAAuB;QACfD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACtBH,EAAA,CAAAC,cAAA,kBAAgC;QAEOD,EAAA,CAAAI,UAAA,sBAAAC,wDAAA;UAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAR,EAAA,CAAAS,WAAA;UAAA,OAAYT,EAAA,CAAAU,WAAA,CAAAX,GAAA,CAAAd,UAAA,CAAAuB,GAAA,CAAsB;QAAA,EAAC;QAC9DR,EAAA,CAAAC,cAAA,UAAK;QACDD,EAAA,CAAAW,SAAA,eAA8B;QAC9BX,EAAA,CAAAC,cAAA,eAME;QADED,EAAA,CAAAI,UAAA,2BAAAQ,8DAAAC,MAAA;UAAA,OAAAd,GAAA,CAAAjB,UAAA,CAAAC,QAAA,GAAA8B,MAAA;QAAA,EAAiC;QALrCb,EAAA,CAAAG,YAAA,EAME;QAENH,EAAA,CAAAC,cAAA,WAAK;QACDD,EAAA,CAAAW,SAAA,gBAA2B;QAC3BX,EAAA,CAAAC,cAAA,gBAME;QADED,EAAA,CAAAI,UAAA,2BAAAU,+DAAAD,MAAA;UAAA,OAAAd,GAAA,CAAAjB,UAAA,CAAAE,KAAA,GAAA6B,MAAA;QAAA,EAA8B;QALlCb,EAAA,CAAAG,YAAA,EAME;QAENH,EAAA,CAAAW,SAAA,gBAAsC;QAC1CX,EAAA,CAAAG,YAAA,EAAO;;;QAdKH,EAAA,CAAAe,SAAA,GAAiC;QAAjCf,EAAA,CAAAgB,UAAA,YAAAjB,GAAA,CAAAjB,UAAA,CAAAC,QAAA,CAAiC;QAUjCiB,EAAA,CAAAe,SAAA,GAA8B;QAA9Bf,EAAA,CAAAgB,UAAA,YAAAjB,GAAA,CAAAjB,UAAA,CAAAE,KAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}